1
00:00:00,230 --> 00:00:03,040
This lecture is about the base plotting
system in R.

2
00:00:03,040 --> 00:00:07,530
Now previously we talked about the three
different plotting systems that R has.

3
00:00:07,530 --> 00:00:11,470
The base plotting system, the lattice
system, and the G G plots, the two system.

4
00:00:11,470 --> 00:00:14,100
So here I'm going to talk about the base
plotting functions and the,

5
00:00:14,100 --> 00:00:17,060
which is the kind of most commonly used
system in, for plotting in R.

6
00:00:18,580 --> 00:00:21,700
All of the core plotting and graphics
engine in R is

7
00:00:21,700 --> 00:00:25,820
encapsulated in the graphics package and
the G R devices Package.

8
00:00:25,820 --> 00:00:27,565
The GR devices package contains all the

9
00:00:27,565 --> 00:00:29,760
code for the graphics devices, including
the screen

10
00:00:29,760 --> 00:00:33,580
devices, like X11 and Windows ports, as
well

11
00:00:33,580 --> 00:00:36,670
as file devices like PDF and Post Script.

12
00:00:36,670 --> 00:00:40,110
The graphics package contains the plotting
functions, so, so very

13
00:00:40,110 --> 00:00:44,020
basic functions like plot, hist, boxplot
and, and many others.

14
00:00:44,020 --> 00:00:47,814
And so this will be core plotting system,
what we call the base graphic system.

15
00:00:47,814 --> 00:00:50,934
The lattice system is, is encapsulated in

16
00:00:50,934 --> 00:00:52,790
the lattice package.

17
00:00:52,790 --> 00:00:56,430
And that uses another package called grid,
which is a kind of a low-level,

18
00:00:56,430 --> 00:00:59,450
graphics system that's kind of an
alternative

19
00:00:59,450 --> 00:01:01,780
to the, to the base graphing system.

20
00:01:01,780 --> 00:01:05,130
We usually, we don't ever, we usually
don't call the grid

21
00:01:05,130 --> 00:01:09,610
package directly, only indirectly through
packages like lattice or GE plot.

22
00:01:09,610 --> 00:01:12,020
And the last package we'll talk about in a
separate lecture.

23
00:01:13,160 --> 00:01:16,020
So in the process of making a plot there
are a lot

24
00:01:16,020 --> 00:01:20,355
of considerations that you have to make.
In terms of where will the plot be made?

25
00:01:20,355 --> 00:01:21,433
Will it be made on the screen?

26
00:01:21,433 --> 00:01:24,420
Will it be sent to a file?
How will the plot be used?

27
00:01:24,420 --> 00:01:26,420
Is it for viewing on the screen
temporarily?

28
00:01:26,420 --> 00:01:27,822
Is it going to be in a web browser?

29
00:01:27,822 --> 00:01:30,160
Are you going to be printing it in a
paper?

30
00:01:30,160 --> 00:01:32,140
Is it going to be publication quality, or
you're

31
00:01:32,140 --> 00:01:34,420
going to use it in a slideshow or
presentation?

32
00:01:34,420 --> 00:01:35,916
So, these are kind of questions that you

33
00:01:35,916 --> 00:01:37,922
need to think about when you're making a
plot.

34
00:01:37,922 --> 00:01:39,808
Another thing, another question that you
might

35
00:01:39,808 --> 00:01:41,234
want to think about is there, is there

36
00:01:41,234 --> 00:01:43,607
a large amount of data that's going to go
into this plot?

37
00:01:43,607 --> 00:01:44,758
Or maybe just a few points?

38
00:01:44,758 --> 00:01:47,150
Or is it an image?
Or is it a line drawing?

39
00:01:47,150 --> 00:01:48,415
Or is it something like that.

40
00:01:48,415 --> 00:01:52,515
Un, and then lastly one question that's
worth ask, what, asking is

41
00:01:52,515 --> 00:01:55,870
whether you need to be able to dynamically
resize the graphic, because

42
00:01:55,870 --> 00:01:57,740
you may want to use something like a
vector format if you

43
00:01:57,740 --> 00:02:01,200
are sending it to a file rather than a bit
map format.

44
00:02:01,200 --> 00:02:02,830
So those are a couple of questions that
you

45
00:02:02,830 --> 00:02:05,670
want to make as you start making a plot.

46
00:02:05,670 --> 00:02:06,270
The other question of

47
00:02:06,270 --> 00:02:08,540
course is what graphic system you want to
use?

48
00:02:08,540 --> 00:02:11,118
There's Base, lattice, and ggplot2.

49
00:02:11,118 --> 00:02:12,951
And the reason why you have to ask
yourself this

50
00:02:12,951 --> 00:02:16,163
question is because you can't really mix
the three different systems.

51
00:02:16,163 --> 00:02:19,543
And so the three systems, roughly
speaking, are,

52
00:02:19,543 --> 00:02:21,753
you know, base graphics has this kind of

53
00:02:21,753 --> 00:02:25,198
piecemeal construction where you put
things together one

54
00:02:25,198 --> 00:02:27,816
by one, through a series of function
calls.

55
00:02:27,816 --> 00:02:31,586
Now, the lattice system creates entire
plots out of a single function call,

56
00:02:31,586 --> 00:02:35,370
so everything kind of has to be
conceptualized from the get go.

57
00:02:35,370 --> 00:02:39,936
And the ggplot2 system kind of combines
concepts from both lattice and base.

58
00:02:39,936 --> 00:02:43,176
So in this lecture we'll be focusing only
on the base plotting system,

59
00:02:43,176 --> 00:02:46,800
and, and we'll be talking about creating
graphics on the screen device only.

60
00:02:47,920 --> 00:02:50,440
So in base graphics, you,

61
00:02:50,440 --> 00:02:53,950
you're essentially creating two
dimensional graphics.

62
00:02:53,950 --> 00:02:56,030
and, and you have to do it in a two phase
process.

63
00:02:56,030 --> 00:02:57,035
The first process

64
00:02:57,035 --> 00:03:00,184
initializes the new plot and the second
par, phase

65
00:03:00,184 --> 00:03:03,538
I should say, annotates or adds to an
existing plot.

66
00:03:03,538 --> 00:03:07,539
And so there are a number of functions
that are useful for initializing a plot.

67
00:03:07,539 --> 00:03:09,324
And then there are ano-, separate set of

68
00:03:09,324 --> 00:03:12,272
functions that are useful for annotating a
plot.

69
00:03:12,272 --> 00:03:14,592
So the plot function or the hist function
are two

70
00:03:14,592 --> 00:03:18,510
examples of functions that are init-, used
for initializing a plot.

71
00:03:18,510 --> 00:03:19,640
And what they do is that if they, if

72
00:03:19,640 --> 00:03:22,490
there's no graphics device open already,
it will launch

73
00:03:22,490 --> 00:03:24,184
a graphics device.

74
00:03:24,184 --> 00:03:26,685
And typically, this will be, come in the
form as

75
00:03:26,685 --> 00:03:29,268
a, of a window that pops up on your
screen.

76
00:03:29,268 --> 00:03:32,842
And then it will draw the plot on that new
device.

77
00:03:32,842 --> 00:03:36,762
The plot function is a generic function in
R, and so, it has, it,

78
00:03:36,762 --> 00:03:41,840
it can behave differently, depending on
what kinds of data you pass to it.

79
00:03:41,840 --> 00:03:44,450
If you don't pass it a special type, piece
of data, so, if you

80
00:03:44,450 --> 00:03:47,740
just pass it, if X and Y are, for example,
vectors, then, you use

81
00:03:47,740 --> 00:03:49,380
what's called the default method for plot.

82
00:03:50,420 --> 00:03:52,660
This default method has a lot of
arguments.

83
00:03:52,660 --> 00:03:55,450
And you can look at the help page for plot
and see what those arguments are.

84
00:03:56,630 --> 00:03:58,950
For example, you can set things like the
title, the x-axis

85
00:03:58,950 --> 00:04:02,350
label and the y-axis label and many other
types of details.

86
00:04:03,430 --> 00:04:05,450
In general, the Base graphics system has
many

87
00:04:05,450 --> 00:04:08,020
parameters that you, can use to set that

88
00:04:08,020 --> 00:04:12,790
can set, and tweak to make your graphics
look exactly the way you want them to.

89
00:04:12,790 --> 00:04:15,720
This is kind of a, it's a, it's a
double-edged sword,

90
00:04:15,720 --> 00:04:18,160
because there are a lot of things that you
can customize.

91
00:04:18,160 --> 00:04:19,250
But of course, then, there are a lot of

92
00:04:19,250 --> 00:04:22,450
things that you have to set that are not
automatic.

93
00:04:22,450 --> 00:04:25,540
And so, most of these parameters are
documented in the help page for par,

94
00:04:25,540 --> 00:04:29,330
so you just look at that help page, you'll
see a lot of parameters there.

95
00:04:29,330 --> 00:04:31,690
It wouldn't help, hurt to try to memorize
this help page,

96
00:04:31,690 --> 00:04:35,080
of course, but it's always there for you
if you don't.

97
00:04:35,080 --> 00:04:38,080
So, here's a, the, a basic graph that,

98
00:04:38,080 --> 00:04:41,170
that is made using the base graphic system
here.

99
00:04:41,170 --> 00:04:44,854
I'm using the hist function which creates
a histogram.

100
00:04:44,854 --> 00:04:47,670
Which is a kind of a one-dimensional plot.

101
00:04:47,670 --> 00:04:49,650
And so here I'm loading the air quality
data set

102
00:04:49,650 --> 00:04:53,160
from the data set's package and I'm making
histogram of ozone.

103
00:04:53,160 --> 00:04:55,760
And so you can see that I'm not setting,
I'm not using,

104
00:04:55,760 --> 00:04:58,840
there are other arguments to hist but I'm
not setting all of them.

105
00:04:58,840 --> 00:05:01,120
And so I'm just using the defaults for,
for whatever

106
00:05:01,120 --> 00:05:03,710
there is there for hist, and it makes a
simple histogram.

107
00:05:03,710 --> 00:05:07,800
And so, this if my graphics device had not
been open in R,

108
00:05:07,800 --> 00:05:11,340
it would have opened the graphics device
and then put the histogram in there.

109
00:05:13,130 --> 00:05:16,408
Another fundamental type of plot is the
scatter plot, of course.

110
00:05:16,408 --> 00:05:18,550
And this can be created using the plot
function here.

111
00:05:18,550 --> 00:05:20,070
I'm using the same data set, but I'm

112
00:05:20,070 --> 00:05:22,880
making a scatter plot of ozone versus
wind.

113
00:05:24,040 --> 00:05:25,970
And so you can see the default plotting is
if

114
00:05:25,970 --> 00:05:28,590
I don't specify any other arguments to the
plot function it's,

115
00:05:28,590 --> 00:05:30,260
I'm using all the defaults here.

116
00:05:30,260 --> 00:05:33,190
And the default plotting symbol is a, is

117
00:05:33,190 --> 00:05:35,770
an open circle with kind of a white
background.

118
00:05:39,060 --> 00:05:41,600
And then finally, this is another function
that initializes the plot.

119
00:05:41,600 --> 00:05:43,432
It's the box plot function.

120
00:05:43,432 --> 00:05:44,750
here, and you can see I'm making a

121
00:05:44,750 --> 00:05:47,910
box plot of the distribution of ozone by
month.

122
00:05:47,910 --> 00:05:52,320
So you see the box, the box plot function
uses a kind of formula notation, where I'm

123
00:05:52,320 --> 00:05:56,210
saying on the Y axis I want ozone, which
is the left hand side of the tilde.

124
00:05:56,210 --> 00:05:58,100
And on the right hand side I specify what
I want

125
00:05:58,100 --> 00:06:00,658
on the X axis, which in this case is the
month.

126
00:06:00,658 --> 00:06:04,365
And so like, the, the month is to kind of
divide it into a categorical vector.

127
00:06:04,365 --> 00:06:07,373
cat, sorry, car, categorical variable so
if for

128
00:06:07,373 --> 00:06:10,445
the months of May, June, July, August and
September.

129
00:06:10,445 --> 00:06:14,085
And here you see, I specified what I want
the x lab, the x label to,

130
00:06:14,085 --> 00:06:17,628
x axis label to be through x lab and the y
axis label through y lab.

131
00:06:17,628 --> 00:06:23,487
[BLANK_AUDIO]

132
00:06:23,487 --> 00:06:26,237
So there are a couple of key base graphic
parameters that are

133
00:06:26,237 --> 00:06:28,987
useful to kind of keep in the, and, at the
front of your

134
00:06:28,987 --> 00:06:31,957
brain, or at the top of your head,
whatever you want to call

135
00:06:31,957 --> 00:06:35,670
it because they are, you know, you tend to
use them quite often.

136
00:06:35,670 --> 00:06:39,938
The first one is the pch or the plotting
character or plotting symbol.

137
00:06:39,938 --> 00:06:41,758
And you notice that the default in the, in

138
00:06:41,758 --> 00:06:44,289
the previous plots tends to be, is the
open circle.

139
00:06:44,289 --> 00:06:46,569
But you can change this to be something
else,

140
00:06:46,569 --> 00:06:48,669
and, and so the pch can be, take two types

141
00:06:48,669 --> 00:06:49,530
of arguments.

142
00:06:49,530 --> 00:06:54,710
It can take a number which refers to a
table of kind of built-in symbols.

143
00:06:54,710 --> 00:06:56,441
Or, it can take a character.

144
00:06:56,441 --> 00:06:58,201
So we can take character element which

145
00:06:58,201 --> 00:07:00,250
would be plot that character on the
screen.

146
00:07:00,250 --> 00:07:02,744
So if you give the letter A for example,
then it will

147
00:07:02,744 --> 00:07:06,070
use as, the letter A the plotting symbol
for all your data points.

148
00:07:06,070 --> 00:07:11,340
So sometimes this is useful for kind of
self-labeling a plot, so you

149
00:07:11,340 --> 00:07:14,060
can see that all the As represent one
group, and all the Bs represent

150
00:07:14,060 --> 00:07:15,280
another group.

151
00:07:15,280 --> 00:07:17,530
The lty is the line type, and so if you're

152
00:07:17,530 --> 00:07:21,970
plotting things that have, plotting data
that are lines this

153
00:07:21,970 --> 00:07:24,050
will specify whether it's a solid line, a
dashed line

154
00:07:24,050 --> 00:07:27,440
or a dotted line or a dot-dash line, or
etc.

155
00:07:27,440 --> 00:07:29,362
The lwd is the line width.

156
00:07:29,362 --> 00:07:31,930
So some, a lot of times you want to
control the line

157
00:07:31,930 --> 00:07:35,810
width depending on how, you know, how the
plot's going to be used.

158
00:07:35,810 --> 00:07:37,394
For example, if the plot's going to be in

159
00:07:37,394 --> 00:07:39,218
a presentation where lots of people are
going

160
00:07:39,218 --> 00:07:41,810
to be sitting in the back row, then you
want to, usually you

161
00:07:41,810 --> 00:07:44,516
want to have very thick line width so they
can see the lines.

162
00:07:44,516 --> 00:07:46,396
But if it's going to be in a publication
where

163
00:07:46,396 --> 00:07:47,900
it's going to be in a mag, in a journal or

164
00:07:47,900 --> 00:07:49,827
printed and people are going to be looking
at

165
00:07:49,827 --> 00:07:52,930
it much closer, then you don't need such
thick lines.

166
00:07:52,930 --> 00:07:54,973
The col is the col-, the plotting colors.

167
00:07:54,973 --> 00:07:59,890
This is the color that the the plotting
symbols will appear on the screen.

168
00:07:59,890 --> 00:08:03,090
Sometimes you like to cu-, customize that.

169
00:08:03,090 --> 00:08:05,020
You can specify colors using

170
00:08:05,020 --> 00:08:09,030
either a number or a string which, which
is like a word

171
00:08:09,030 --> 00:08:12,740
or you can use a hexcode that's written
in, in character format.

172
00:08:12,740 --> 00:08:14,210
And the colors function will give you a

173
00:08:14,210 --> 00:08:16,950
list of colors that you can specify by
name.

174
00:08:16,950 --> 00:08:18,350
So you can see there are a lot of colors
there.

175
00:08:19,770 --> 00:08:23,380
And then xlab and ylab will let you
specify the x axis and y axis labels.

176
00:08:25,640 --> 00:08:27,870
And that's very useful for annotating
plots.

177
00:08:28,950 --> 00:08:32,070
And a couple other base graphics
parameters that can

178
00:08:32,070 --> 00:08:35,590
be useful that you can set in the par
function.

179
00:08:35,590 --> 00:08:39,670
Because the par function is used to
specify global graphics parameters.

180
00:08:39,670 --> 00:08:43,060
So these, these will be the same in every
single plot that you make.

181
00:08:43,060 --> 00:08:45,500
Of course you could always, always, you
can usually, I should say,

182
00:08:45,500 --> 00:08:48,830
override the global graphics parameters
with,

183
00:08:48,830 --> 00:08:51,130
by specifying them in each function call.

184
00:08:51,130 --> 00:08:54,394
So if you don't like, for example the
background color,

185
00:08:54,394 --> 00:08:58,349
you can usually, you can change that
within a given function.

186
00:08:58,349 --> 00:09:02,089
However, other parameters like the margin
size, or the mfrow or

187
00:09:02,089 --> 00:09:06,449
the mfcol, these cannot be spec, changed
within the plotting function.

188
00:09:06,449 --> 00:09:09,620
They have to be changed using the par
function only.

189
00:09:09,620 --> 00:09:14,150
And so the las, the las, is, is the
orientation of the axis on the labels.

190
00:09:14,150 --> 00:09:16,310
So if you'd like all the labels on the
the,

191
00:09:16,310 --> 00:09:19,180
the axis labels to be kind of horizontal
or,

192
00:09:19,180 --> 00:09:22,110
or perpendicular to the graph, you can
change this.

193
00:09:22,110 --> 00:09:24,610
BG is the background color for the plot.

194
00:09:24,610 --> 00:09:28,330
The margin size, sometimes it needs to be
modified

195
00:09:28,330 --> 00:09:30,830
if you have a very complex x, y axis

196
00:09:30,830 --> 00:09:33,240
or x axis label, you might, might want to
make

197
00:09:33,240 --> 00:09:35,948
the margin a little bit bigger to
accommodate that.

198
00:09:35,948 --> 00:09:39,068
The outer margin is important if you have
multiple plots per page and you

199
00:09:39,068 --> 00:09:41,564
want to have a mar-, a kind of a label
that's in the outer

200
00:09:41,564 --> 00:09:44,590
margin that kind of covers the entire
plot.

201
00:09:44,590 --> 00:09:47,450
And the mfrow and the mfcol control how
many, if

202
00:09:47,450 --> 00:09:50,890
you having multiple plots on the dev, on
the screen device.

203
00:09:50,890 --> 00:09:53,850
And for example you have a matrix of
plots.

204
00:09:53,850 --> 00:09:56,800
And it controls how many plots will appear
per row, and per column.

205
00:09:59,360 --> 00:10:00,990
So you can see what the default values

206
00:10:00,990 --> 00:10:03,200
for some of these global graphics
parameters are,

207
00:10:03,200 --> 00:10:05,130
by just calling the par function with the

208
00:10:05,130 --> 00:10:08,000
name of the parameter and no other
arguments.

209
00:10:08,000 --> 00:10:11,040
So you can see the lty, the default is a
solid line.

210
00:10:11,040 --> 00:10:13,900
For color, the default is black and for
pch the

211
00:10:13,900 --> 00:10:19,080
plotting symbol is 1, which corresponds to
n open circle.

212
00:10:19,080 --> 00:10:20,980
For BG, the, the background is

213
00:10:20,980 --> 00:10:23,626
transparent, so there's really no
background color.

214
00:10:23,626 --> 00:10:24,523
And then for the

215
00:10:24,523 --> 00:10:28,111
margin you can see that there's four
numbers here and each one

216
00:10:28,111 --> 00:10:31,391
of these numbers refers to one of the
margins of a plot.

217
00:10:31,391 --> 00:10:33,800
And if you think of the bottom of the plot

218
00:10:33,800 --> 00:10:36,428
as the first side and then the left hand
side

219
00:10:36,428 --> 00:10:38,983
is the second side, and then the top is
the

220
00:10:38,983 --> 00:10:42,282
third side and the right hand side is the
fourth side.

221
00:10:42,282 --> 00:10:45,574
So you can think of, starting at the
bottom going in a clockwise direction.

222
00:10:45,574 --> 00:10:49,683
Those are the four sides of a plot.
And you can see the bottom margin

223
00:10:49,683 --> 00:10:52,002
gets a spa-, a, a size of 5.1.

224
00:10:52,002 --> 00:10:55,047
And you can roughly think of this as 5.1

225
00:10:55,047 --> 00:10:58,798
lines of text that could be in the bottom
margin.

226
00:10:58,798 --> 00:11:02,158
And then the s-,, the left hand side is
4.1,

227
00:11:02,158 --> 00:11:05,646
the top is 4.1 and the right hand side is
2.1.

228
00:11:05,646 --> 00:11:08,931
So you can adjust those margin sizes if
you need to

229
00:11:08,931 --> 00:11:13,336
accommodate your plot to make more or less
space in those margins.

230
00:11:13,336 --> 00:11:15,091
And then the mfrow defaults

231
00:11:15,091 --> 00:11:17,780
to 1,1, which means one row and one
column.

232
00:11:17,780 --> 00:11:18,880
So that's just a single plot.

