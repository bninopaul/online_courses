1
00:00:00,820 --> 00:00:03,220
So there are a couple of other functions
that may be of use to you.

2
00:00:03,220 --> 00:00:07,370
One is the rgb function and the rgb
function takes

3
00:00:07,370 --> 00:00:10,610
arguments for red, green and blue, and
what it returns.

4
00:00:10,610 --> 00:00:14,690
So these are numbers between zero and one
for red, green and blue and it will

5
00:00:14,690 --> 00:00:21,125
return, hexadecimal string that can be
passed to functions like image or plot.

6
00:00:21,125 --> 00:00:26,230
And so that, so if you want to convert
between red, gr, red, kind of ,um,

7
00:00:26,230 --> 00:00:28,970
decimal red green blue representation to
this hexadecimal

8
00:00:28,970 --> 00:00:32,900
string you can use the rgb, function for
that.

9
00:00:32,900 --> 00:00:36,380
Another thing you can use rgb for is to
add transparency to your colors.

10
00:00:36,380 --> 00:00:39,710
And so, there is a fourth argument to rgb
view which is a number between

11
00:00:39,710 --> 00:00:42,200
zero and one, the alpha parameter, which
have

12
00:00:42,200 --> 00:00:46,840
been used, to specify transparency in your
colors.

13
00:00:46,840 --> 00:00:49,090
Zero being the most transparent, or
basically

14
00:00:49,090 --> 00:00:51,730
completely transparent, and one being not
transparent

15
00:00:51,730 --> 00:00:53,010
at all.

16
00:00:53,010 --> 00:00:56,000
And lastly I'll just mention the color
space package which can be used

17
00:00:56,000 --> 00:00:59,860
to, to have a different, to exert a
different type of control over colors.

18
00:00:59,860 --> 00:01:01,980
You may want to explore it, but I won't
talk about it here.

19
00:01:03,950 --> 00:01:06,790
So just a quick example of the
transparency in r,

20
00:01:06,790 --> 00:01:10,390
so here's a plot of a, a, of a thousand
points.

21
00:01:10,390 --> 00:01:12,450
And you could see that in the high density
region

22
00:01:12,450 --> 00:01:16,620
here, I'm using the pch 19 which is a
solid circle.

23
00:01:16,620 --> 00:01:16,780
In the

24
00:01:16,780 --> 00:01:19,900
high density region, all the plot, all the
points just kind of overlap each

25
00:01:19,900 --> 00:01:23,169
other, so you just see a black,uh,blob
there in the middle and it's,

26
00:01:23,169 --> 00:01:27,480
card, kind of hard to see what the
resolution for the different points

27
00:01:27,480 --> 00:01:32,130
because there is no definition of points
there because they are all overlapping.

28
00:01:32,130 --> 00:01:36,160
So if I add a little transparency to the
plot you'll see that the circles

29
00:01:36,160 --> 00:01:38,239
become transparent so when they overlap
each other

30
00:01:38,239 --> 00:01:40,295
they, you can kind of see through them.

31
00:01:40,295 --> 00:01:41,800
And so that the areas where

32
00:01:41,800 --> 00:01:45,910
there are lots of points overlapping they,
they get darker and when there are

33
00:01:45,910 --> 00:01:47,510
areas where there are no points
overlapping

34
00:01:47,510 --> 00:01:49,790
you just see kind of a transparent circle.

35
00:01:49,790 --> 00:01:54,570
So here I've got below, I've got the code
that I've used to create this plot.

36
00:01:54,570 --> 00:01:58,030
And you can see that I've specified an
alpha parameter of 0.2.

37
00:01:58,030 --> 00:02:01,330
And, and the r, the red, green and blue
are all zeros so I can get black.

38
00:02:01,330 --> 00:02:06,315
Uh,and so point two is pretty close to
zero, so there's a lot of transparency.

39
00:02:06,315 --> 00:02:10,080
Um,but you can see that when I use the
transparency like thisiIt's

40
00:02:10,080 --> 00:02:13,570
kind of a cheap and easy way to get
essentially a histogram estimator

41
00:02:13,570 --> 00:02:18,210
because, you know, the, the darker areas
will represent higher density areas of

42
00:02:18,210 --> 00:02:22,040
the plot and the lighter areas will
represent kind of lower density areas.

43
00:02:22,040 --> 00:02:25,580
So you can see a little bit more
information when you have a plot with

44
00:02:25,580 --> 00:02:28,430
a lot of different points in it when you
use a little bit of transparency.

45
00:02:31,760 --> 00:02:34,220
So that's just, that's the basic intro
into

46
00:02:34,220 --> 00:02:36,660
the use of colors and transparency into r.

47
00:02:36,660 --> 00:02:39,530
I think that the careful use of colors and
plots

48
00:02:39,530 --> 00:02:42,380
and maps and whatever just, can make it
easier for

49
00:02:42,380 --> 00:02:44,420
the reader to get the point that you're
trying to

50
00:02:44,420 --> 00:02:47,060
make, or to see the comparisons that
you're trying to make.

51
00:02:47,060 --> 00:02:52,050
And and I think it's it's useful to have a
good set of colors, especially

52
00:02:52,050 --> 00:02:53,890
to match kind of sequential colors and

53
00:02:53,890 --> 00:02:57,070
sequential data and diverging colors with
diverging data.

54
00:02:57,070 --> 00:02:59,690
The color brewer, the RColorBrewer package
is a

55
00:02:59,690 --> 00:03:02,040
very useful package that's available on
CRAN, and

56
00:03:02,040 --> 00:03:04,620
it provides these uh,color palettes for
the different

57
00:03:04,620 --> 00:03:07,400
types of data that you might be plotting.

58
00:03:07,400 --> 00:03:09,550
The color ramp and color palette functions
are

59
00:03:09,550 --> 00:03:13,360
essential when you're trying to
interpolate between colors, especially

60
00:03:13,360 --> 00:03:15,870
if you're using the RColor per package and
you

61
00:03:15,870 --> 00:03:19,100
want interpolate between the colors on a
given palette.

62
00:03:20,480 --> 00:03:22,160
And then finally, transparency is very

63
00:03:22,160 --> 00:03:26,460
useful because it can be used to clarify
plots which have many many points on them

64
00:03:26,460 --> 00:03:28,460
by cre, by allowing the colors to be

65
00:03:28,460 --> 00:03:30,550
transparent and to kind of overlap each
other.

