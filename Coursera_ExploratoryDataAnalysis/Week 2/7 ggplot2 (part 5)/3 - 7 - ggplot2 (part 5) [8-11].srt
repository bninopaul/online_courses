1
00:00:01,630 --> 00:00:04,800
So there's one thing that is worth
pointing out which, maybe which differs

2
00:00:04,800 --> 00:00:09,450
in ggplot than it does from say the base
plots Is that if you

3
00:00:09,450 --> 00:00:15,110
have a plot where, where the the data kind
of exceed the limits of

4
00:00:15,110 --> 00:00:18,500
the plot the behavior between base plot
and ggplot can change a little bit.

5
00:00:18,500 --> 00:00:22,000
So here on the left hand side I've just
simulates some data.

6
00:00:22,000 --> 00:00:26,650
So just, so, so this is not max data.
And I just, I, and I, I intentionally

7
00:00:26,650 --> 00:00:27,980
introduced a little outlier here.

8
00:00:27,980 --> 00:00:31,070
So in the 50th data point, I just changed
that value to be 100.

9
00:00:31,070 --> 00:00:34,940
So now as the, just kind of this random
series of, of noisy data.

10
00:00:34,940 --> 00:00:36,730
And then right in the middle, there's a
point that's 100.

11
00:00:36,730 --> 00:00:40,750
And so if I call plot, so I'm going to
make a standard base plot here.

12
00:00:40,750 --> 00:00:42,560
I call plot on x and y, and I, and I

13
00:00:42,560 --> 00:00:44,620
say type equals l, because I want to make
a line plot.

14
00:00:45,620 --> 00:00:48,690
But then typically if you have some out
lier like this you don't want to

15
00:00:48,690 --> 00:00:51,430
look at the outlier you just want to look
at the core of the data.

16
00:00:51,430 --> 00:00:51,900
So it's

17
00:00:51,900 --> 00:00:55,640
typical to kind of set the the y axis
limits to be, to

18
00:00:55,640 --> 00:00:58,790
be roughly kind of where the data are and
just ignore the outlier.

19
00:00:58,790 --> 00:01:00,700
So you can see that the time series that
gets

20
00:01:00,700 --> 00:01:03,610
drawn has all the data connected and that
you can see

21
00:01:03,610 --> 00:01:06,150
roughly where it's going to shoot off to a
hundred and

22
00:01:06,150 --> 00:01:08,420
comes back down to be roughly where it's
suppose to be.

23
00:01:08,420 --> 00:01:09,930
So you know that outlier is out there

24
00:01:09,930 --> 00:01:12,190
somewhere, but you don't see it in the
plot.

25
00:01:12,190 --> 00:01:17,170
Now, if I do the equivalent plot in
ggplot, I can create my ggplot with with

26
00:01:17,170 --> 00:01:19,580
the test data, and the aesthetics to the x
and y.

27
00:01:19,580 --> 00:01:22,520
And then I add the geom_line function to
make

28
00:01:22,520 --> 00:01:24,690
a line plot as opposed to a scatter plot.

29
00:01:24,690 --> 00:01:27,890
You can see that just plots the whole, all
the data including the outliers.

30
00:01:27,890 --> 00:01:29,700
And it's maybe not exactly the kind of
plot

31
00:01:29,700 --> 00:01:33,650
you want to make because the outliers
maybe not that interesting.

32
00:01:33,650 --> 00:01:37,020
So if you want to do this, it's you have
to be careful about how you do it.

33
00:01:37,020 --> 00:01:39,290
And so the first is that on the left-hand
side, you

34
00:01:39,290 --> 00:01:42,230
might think, well, I'll just change the y
limits to be within,

35
00:01:42,230 --> 00:01:45,700
kind, in the range of most of the data
between minus 3 and 3.

36
00:01:45,700 --> 00:01:49,450
The issue here is that what ggplot will do
is that it will subset the data.

37
00:01:49,450 --> 00:01:51,870
To include the values that are between
minus 3 and 3.

38
00:01:51,870 --> 00:01:54,500
And so, of course, the outlier is not
included in this data

39
00:01:54,500 --> 00:01:58,610
set and so you won't see that data point
in this plot.

40
00:01:58,610 --> 00:02:00,970
So you can see this clearly where the
outlier's missing the

41
00:02:00,970 --> 00:02:05,450
two lines are not connected, but then
everything else is connected afterwards.

42
00:02:05,450 --> 00:02:07,770
So if you want to recreate the kind of
phenomenon

43
00:02:07,770 --> 00:02:11,870
that you saw with baseplot You have to
add, this special

44
00:02:11,870 --> 00:02:16,390
function called coord_cartesian, which
that sets the limits to be minus 3.

45
00:02:16,390 --> 00:02:18,330
The one, the y axis limits to be minus 3
and 3.

46
00:02:18,330 --> 00:02:19,700
Now you can see in the plot here that

47
00:02:19,700 --> 00:02:22,330
the outlier is in fact included, in the
dataset.

48
00:02:22,330 --> 00:02:25,230
It's the dataset hasn't been subsetted to
only include

49
00:02:25,230 --> 00:02:26,794
the ones that are in the y axis range.

50
00:02:26,794 --> 00:02:32,850
Um,so, I just want to go over a slightly
more complex example of kind of adding

51
00:02:32,850 --> 00:02:34,680
pieces to a plot, just so you can get

52
00:02:34,680 --> 00:02:37,200
a sense of how the different layers are
added on.

53
00:02:37,200 --> 00:02:39,420
And then hopefully get you going from
there.

54
00:02:39,420 --> 00:02:42,220
So, so here I've just, I've made the

55
00:02:42,220 --> 00:02:43,971
scientific question just a little bit more
complex.

56
00:02:43,971 --> 00:02:46,820
I want to know how is the relationship
between PM 2.5 and

57
00:02:46,820 --> 00:02:52,580
nocturnal symptoms vary by both BMI and
nitrogen dioxide or NO2.

58
00:02:52,580 --> 00:02:58,420
And so as NO2 or BMI values change how
what does the relationship between

59
00:02:58,420 --> 00:03:00,900
PM PM 2.5 and nocturnal symptoms look
like?

60
00:03:00,900 --> 00:03:04,340
So one tricky thing about this is unlike
our previous BMI

61
00:03:04,340 --> 00:03:07,550
variable which is kind of categorized into
normal and over weight.

62
00:03:07,550 --> 00:03:09,610
Now, NO2 variable is continuous, or it's
really the

63
00:03:09,610 --> 00:03:12,750
log of the NO2, and it's really a
continuous variable.

64
00:03:12,750 --> 00:03:15,960
So we need to, so we can't really
condition on a continuous variable

65
00:03:15,960 --> 00:03:18,920
when we're making plots because then there
would be an infinite number of plots.

66
00:03:18,920 --> 00:03:23,940
And so we need to categorize this variable
into a reasonable series of ranges.

67
00:03:23,940 --> 00:03:26,690
And so what we're going to do is we can
use the cut function

68
00:03:26,690 --> 00:03:31,410
for this purpose, to cut literally cut the
data into a series of ranges.

69
00:03:32,920 --> 00:03:37,840
So here is some code to make NO2, split
NO2 into tertiles, so this is going to be

70
00:03:37,840 --> 00:03:40,040
three separate categories you know, kind
of between

71
00:03:40,040 --> 00:03:43,270
zero, the minimum, and the 33rd
percentile, the 33rd.

72
00:03:43,270 --> 00:03:46,610
In the 66 and the 66 to the maximum.

73
00:03:46,610 --> 00:03:49,730
And so the first thing I need to do is use
the quantile function

74
00:03:49,730 --> 00:03:55,860
to figure out where in the data ranges are
the 33'rd and 66th percentiles.

75
00:03:55,860 --> 00:03:59,880
And once I've use the quantile function to
find these cut points I pass that to

76
00:03:59,880 --> 00:04:01,700
cut function and I use the cut function

77
00:04:01,700 --> 00:04:04,480
to actually NO2 into these three different
ranges.

78
00:04:04,480 --> 00:04:06,070
And so what the cut function does is it
just

79
00:04:06,070 --> 00:04:09,440
returns a factor variable where each of
the original data

80
00:04:09,440 --> 00:04:12,110
points is replaced to buy its category in
terms of

81
00:04:12,110 --> 00:04:14,680
the, which tertile it's in, so in terms of
the low,

82
00:04:14,680 --> 00:04:16,810
the middle, or the high tertile.

83
00:04:16,810 --> 00:04:19,835
it's, it's a very handy function for when
you're using things

84
00:04:19,835 --> 00:04:24,190
like lattice or ggplot and you have to
categorize continuous variables.

85
00:04:24,190 --> 00:04:25,700
So now you can see the levels of this

86
00:04:25,700 --> 00:04:28,560
variable, the cut variable are, there's
three different levels.

87
00:04:28,560 --> 00:04:34,931
There's kind of 0.378 to 1.2, and 1.2 to
1.42 and then 1.42 to 2.55.

88
00:04:34,931 --> 00:04:42,760
So those are the three categories that
I've split the NO2 variable into.

89
00:04:42,760 --> 00:04:45,050
So here's the final plot, just to show you
what I'm going

90
00:04:45,050 --> 00:04:47,870
for, and then we'll work backwards, figure
out exactly how to do it.

91
00:04:47,870 --> 00:04:50,970
So you can see that there's eight
different plots here.

92
00:04:50,970 --> 00:04:53,520
On the top you see all the normal weight
children.

93
00:04:53,520 --> 00:04:55,550
And on the bottom you see all the
overweight children.

94
00:04:55,550 --> 00:04:57,550
So those are the two categories of BMI.

95
00:04:58,560 --> 00:05:02,630
And then there's there's four, there's
actually four categories of.

96
00:05:02,630 --> 00:05:05,200
NO2 is the, the first tertile on the left

97
00:05:05,200 --> 00:05:07,870
side, the second tertile on the second
column, the third

98
00:05:07,870 --> 00:05:11,140
tertile on third column, and then there's
actually some data that are missing.

99
00:05:11,140 --> 00:05:14,580
And so these are the data that are missing
NO2 values, but they're

100
00:05:14,580 --> 00:05:17,450
not missing all other values, so you can
still in some sense plot them.

101
00:05:18,450 --> 00:05:19,700
And so it's, it's sometimes, it's often

102
00:05:19,700 --> 00:05:21,420
important to look at the missing data
just.

103
00:05:21,420 --> 00:05:23,900
Just to see if there's anything special
about those missing.

104
00:05:23,900 --> 00:05:26,910
You don't always want to exclude them
right off the bat

105
00:05:26,910 --> 00:05:29,910
because there might be something special
about them you've missed.

106
00:05:29,910 --> 00:05:31,380
So, what does this plot have?

107
00:05:31,380 --> 00:05:33,040
Well first of all I've, I've modified

108
00:05:33,040 --> 00:05:34,470
the transparency on the points.

109
00:05:34,470 --> 00:05:35,980
So I've made them a little bit transparent
so

110
00:05:35,980 --> 00:05:38,000
you can see a little bit of the density
there.

111
00:05:38,000 --> 00:05:41,670
I've added a smoother to each panel, so
this is a linear regression smoother.

112
00:05:41,670 --> 00:05:43,010
So, it's not the default.

113
00:05:43,010 --> 00:05:44,730
And I've turned off the Confidence bands.

114
00:05:45,930 --> 00:05:49,170
There are multiple panels so I've used
faceting to create this plot.

115
00:05:50,210 --> 00:05:53,090
I've changed the kind of default labels
and the titles, so

116
00:05:53,090 --> 00:05:56,910
I've added to, to reflect and be a little
bit more descriptive.

117
00:05:56,910 --> 00:05:58,115
And then finally I used a

118
00:05:58,115 --> 00:06:01,810
non-default font, so the default font is
Is Helvetica,

119
00:06:01,810 --> 00:06:03,330
and I've changed the font here to be
Avenir.

120
00:06:03,330 --> 00:06:07,210
And so, there are a number of options that
I've modified here.

121
00:06:07,210 --> 00:06:09,190
And so, here's the code for doing it.

122
00:06:09,190 --> 00:06:12,340
So, the first, in the first set of code,
I, I just call ggplot.

123
00:06:12,340 --> 00:06:13,770
I give it the data and I give it some

124
00:06:13,770 --> 00:06:16,700
basic aesthetics in terms of the x and y
variables.

125
00:06:16,700 --> 00:06:19,090
And then, to this G object, I add a bunch
of things.

126
00:06:19,090 --> 00:06:23,280
I add points using geom_point.
I add a, I make the panel

127
00:06:23,280 --> 00:06:28,780
using the facet_wrap function and I add a
smoother using the geom smooth

128
00:06:28,780 --> 00:06:33,030
where I specify the LM method and I turn
off the standard error bars.

129
00:06:34,090 --> 00:06:37,750
I, I changed the theme to be this black
and white theme where I,

130
00:06:37,750 --> 00:06:41,180
and then I modified the font to be Avenir
instead, instead of the default.

131
00:06:41,180 --> 00:06:42,350
And I've also made the font a little bit

132
00:06:42,350 --> 00:06:44,580
smaller, to be ten points instead of the
default 12.

133
00:06:44,580 --> 00:06:48,640
And then finally, I've called the labs
function three different times

134
00:06:48,640 --> 00:06:51,720
to change the labels, the x label, the y
label, and the title of the plot.

135
00:06:51,720 --> 00:06:54,540
So you can see that I've added all these
different things piece by

136
00:06:54,540 --> 00:06:59,310
piece to make this plot a little bit more
interesting every single time.

137
00:06:59,310 --> 00:07:01,780
And it's easy to do this with ggplot, and
I, and

138
00:07:01,780 --> 00:07:04,440
then, and the nice thing about ggplot
which I didn't do here

139
00:07:04,440 --> 00:07:07,540
is that you could in fact save this to a
new object

140
00:07:07,540 --> 00:07:09,760
and then you would have everything stored
in a single R object.

141
00:07:09,760 --> 00:07:11,070
And then if you wanted to add on more

142
00:07:11,070 --> 00:07:14,060
layers, you could add to that, that new
object,

143
00:07:14,060 --> 00:07:16,360
you could continue to add different things
if you wanted to.

144
00:07:16,360 --> 00:07:20,440
So it's a very modular, very kind of a, a
useful framework.

145
00:07:20,440 --> 00:07:24,130
For constructing plots that are new just
for your data.

146
00:07:25,380 --> 00:07:28,390
So, just to summarize very quickly, I know
this has been a very

147
00:07:28,390 --> 00:07:32,100
brief introduction in ggplot, and there's
a lot things that you could talk about.

148
00:07:32,100 --> 00:07:36,040
But given that this is not a course
specifically on ggplot, my hope was

149
00:07:36,040 --> 00:07:38,850
to kind of get you started, to get you
typing in some basic code,

150
00:07:38,850 --> 00:07:40,630
making some basic plots.

151
00:07:40,630 --> 00:07:42,810
I hope, and then if you want to know more,
you can kind

152
00:07:42,810 --> 00:07:46,930
of look at some of the references that I
mentioned in, previously.

153
00:07:46,930 --> 00:07:50,900
So, I think in summary, ggplot is a very
powerful, it's very flexible if you

154
00:07:50,900 --> 00:07:52,740
can learn the grammar and learn the
different

155
00:07:52,740 --> 00:07:55,030
pieces that you can add to a plot.

156
00:07:55,030 --> 00:07:56,860
And that can be tuned and modified.

157
00:07:56,860 --> 00:07:58,430
There are lots of different types of plots
you can make.

158
00:07:58,430 --> 00:08:01,220
I left out a lot, but you can explore and
mess around.

159
00:08:01,220 --> 00:08:04,580
I think that's how, that's kind of the
best way to learn about these things.

160
00:08:04,580 --> 00:08:07,490
And to, and to take a look at some of the
references that I mentioned in part one.

