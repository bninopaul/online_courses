1
00:00:01,330 --> 00:00:03,800
Alright so in this lecture I'm going to
talk about ggplot, but I'm

2
00:00:03,800 --> 00:00:04,800
going to talk about some of the

3
00:00:04,800 --> 00:00:07,920
more kind of, underlying fundamental
aspects of ggplot.

4
00:00:07,920 --> 00:00:12,620
In the last lecture I talked mostly about
the qplot function and how you could use

5
00:00:12,620 --> 00:00:14,260
the, the qplot function to kind of make

6
00:00:14,260 --> 00:00:18,730
your basic plots scatterplots, bar charts,
things like that.

7
00:00:18,730 --> 00:00:20,510
This is in some sense a replacement for

8
00:00:20,510 --> 00:00:22,420
the base, for the plot function in R,
which

9
00:00:22,420 --> 00:00:24,820
is, which we use the base plots to create

10
00:00:24,820 --> 00:00:27,520
the same kinds of things, scatter plots
and histograms.

11
00:00:27,520 --> 00:00:29,970
So the qplot function's very handy, but it

12
00:00:29,970 --> 00:00:32,580
doesn't reveal a lot of the underlying
infrastructure

13
00:00:32,580 --> 00:00:34,630
that kind of, is built into ggplot that

14
00:00:34,630 --> 00:00:37,010
allows you to make all kinds of custom
plots.

15
00:00:37,010 --> 00:00:40,750
So I just wanted to highlight a couple of
the basic ideas in this lecture.

16
00:00:40,750 --> 00:00:42,600
I don't really have time to go over every
single

17
00:00:42,600 --> 00:00:47,140
little detail of the ggplot package,
because it's so big.

18
00:00:47,140 --> 00:00:50,970
So I thought I would try to get you
started on a couple of basic fundamentals.

19
00:00:50,970 --> 00:00:52,640
If you have a lot more interest in
developing

20
00:00:52,640 --> 00:00:56,084
plots using the ggplot framework you can
you

21
00:00:56,084 --> 00:00:57,370
can, there are a lot of references that

22
00:00:57,370 --> 00:00:58,740
I mentioned in the previous lecture in
terms

23
00:00:58,740 --> 00:01:01,660
of the ggplot2 book and other types of
books.

24
00:01:01,660 --> 00:01:05,490
So I encourage you to look at those
resources if you want to explore

25
00:01:05,490 --> 00:01:09,890
this type of plotting framework further
than what we discuss here in the course.

26
00:01:09,890 --> 00:01:11,700
So, let's get started.

27
00:01:11,700 --> 00:01:15,110
Just to review a little bit in terms of
what is ggplot2.

28
00:01:15,110 --> 00:01:17,860
Remember it's an implementation of the
grammar of graphics.

29
00:01:17,860 --> 00:01:20,198
Which was developed by Leland Wilkinson.

30
00:01:20,198 --> 00:01:22,945
And the grammar of graphics basically
describes

31
00:01:22,945 --> 00:01:25,799
a re, an abstract representation for
graphics.

32
00:01:26,860 --> 00:01:31,770
And so that the idea is that it's kind of
the verb, noun, adjective for plots.

33
00:01:31,770 --> 00:01:34,120
So what are the basic elements that can be

34
00:01:34,120 --> 00:01:36,700
modified, and cannot be modified, and
things like that?

35
00:01:36,700 --> 00:01:38,980
So that's a theory of graphics that you
can kind of

36
00:01:38,980 --> 00:01:43,610
build on to develop new graphics using
this kind of abstract language.

37
00:01:43,610 --> 00:01:46,740
So some of the basic components of a

38
00:01:46,740 --> 00:01:50,490
ggplot kind of graphic, are, you need
data.

39
00:01:50,490 --> 00:01:52,540
Of course, the data is the most important
thing,

40
00:01:52,540 --> 00:01:54,533
that's what you're going to put on to the
page, and

41
00:01:54,533 --> 00:01:56,746
so you need to have a data frame that

42
00:01:56,746 --> 00:01:59,568
has all the data that you're going to plot
in it.

43
00:01:59,568 --> 00:02:00,660
You need something that's called an

44
00:02:00,660 --> 00:02:03,290
aesthetic mapping, these are, these
describe

45
00:02:03,290 --> 00:02:07,510
how the data are mapped to things like
colors and sizes and points.

46
00:02:07,510 --> 00:02:08,830
Geoms are specific

47
00:02:08,830 --> 00:02:11,490
objects that you're going to put onto the
page, like things like

48
00:02:11,490 --> 00:02:15,960
points or lines or tiles or shapes or
whatever, you have it.

49
00:02:15,960 --> 00:02:19,590
Facets are, are used for conditional
plots, so if you're

50
00:02:19,590 --> 00:02:22,980
going to have multi, typically you want to
have multiple panels of

51
00:02:22,980 --> 00:02:25,670
plots, where it might show the
relationship of something as

52
00:02:25,670 --> 00:02:30,340
something as a third variable changes
that, that's a facet.

53
00:02:30,340 --> 00:02:33,830
And then stats are statistical
transformations like smoothing,

54
00:02:33,830 --> 00:02:36,650
binning, quantiles, regression, things
like that.

55
00:02:36,650 --> 00:02:41,940
Scales are to find how the different
variables are coded, in terms of the plot.

56
00:02:41,940 --> 00:02:45,920
So, for example, you might have a binary
variable that represents sex.

57
00:02:45,920 --> 00:02:49,320
So you let the males will be red, and the
females blue, or something like that.

58
00:02:49,320 --> 00:02:53,820
And so that is a scaling for a particular
type of dichotomous variable.

59
00:02:53,820 --> 00:02:55,970
And lastly, you need a coordinate system
which we

60
00:02:55,970 --> 00:02:59,770
won't focu, focus on too much on this
lecture.

61
00:02:59,770 --> 00:03:01,570
But you need a coordinate system that
tells you

62
00:03:01,570 --> 00:03:04,540
how certain numerical representations get
translated onto a plot.

63
00:03:06,100 --> 00:03:10,170
So when you build a plot with ggplot2, the
basic idea if you're not

64
00:03:10,170 --> 00:03:11,900
going to be using the qplot function,
you'll

65
00:03:11,900 --> 00:03:13,080
want to kind of build it piece by piece.

66
00:03:13,080 --> 00:03:16,520
You can kind of think of it as the
artist's palette model.

67
00:03:16,520 --> 00:03:21,570
So this is the, similar to the model in
the base plotting system but where

68
00:03:21,570 --> 00:03:25,130
you kind of start with something, and you
kind of add things piece by piece.

69
00:03:25,130 --> 00:03:29,290
So unlike the lattice system, where you
had to have the whole plot is encoded in a

70
00:03:29,290 --> 00:03:32,600
single function call, you can start with a
single

71
00:03:32,600 --> 00:03:34,260
call to, you can start with a ggplot
function.

72
00:03:34,260 --> 00:03:37,040
And then you kind of add things on piece
by piece, maybe, as you

73
00:03:37,040 --> 00:03:40,220
think of them, or as you see things in the
plot, you make little changes.

74
00:03:40,220 --> 00:03:42,760
You can kind of add things here as you go.

75
00:03:42,760 --> 00:03:45,070
So the idea is that plots are built up in
layers.

76
00:03:45,070 --> 00:03:45,370
Okay.

77
00:03:45,370 --> 00:03:48,230
And so, the most fundamental layer of
course is the data.

78
00:03:48,230 --> 00:03:50,500
So the first thing you usually start with,
is you kind of tell

79
00:03:50,500 --> 00:03:54,570
ggplot about the data that you're working
with, and some basic aesthetics.

80
00:03:54,570 --> 00:03:58,430
Like, if you're making a scatter plot,
here are the x and y variables.

81
00:03:58,430 --> 00:03:59,940
Then you might overlay a summary.

82
00:03:59,940 --> 00:04:01,740
For example, you might overlay a
statistical

83
00:04:01,740 --> 00:04:04,950
summary like a smoother or progression
line.

84
00:04:04,950 --> 00:04:05,870
Something like that.

85
00:04:05,870 --> 00:04:08,989
And on top of that you might have some
metadata or extra annotation for the plot.

86
00:04:13,226 --> 00:04:16,736
So the running example that I am going to
use for this lecture I spoke about

87
00:04:16,736 --> 00:04:18,896
previously has come from the mouse
allergen and

88
00:04:18,896 --> 00:04:22,020
asthma cohort study which was conducted
here in Baltimore.

89
00:04:22,020 --> 00:04:27,230
Just very briefly, this is a study that
included Baltimore children, age 5 to 17.

90
00:04:27,230 --> 00:04:31,210
They all had persistent athsma, with an
exacerbation in the past year.

91
00:04:31,210 --> 00:04:32,790
And we're interested in a lot of the

92
00:04:32,790 --> 00:04:38,322
environmental triggers for asthma
morbidity in this study.

93
00:04:38,322 --> 00:04:41,802
So some of those, so one of those triggers
we're going to look at is indoor

94
00:04:41,802 --> 00:04:44,876
air pollution, as as specified by
particulate matters,

95
00:04:44,876 --> 00:04:47,860
so fine particulate matters which is PM
2.5.

96
00:04:47,860 --> 00:04:51,510
And we'll also look at nitrogen dioxide,
NO2.

97
00:04:51,510 --> 00:04:54,026
And I want to know whether BMI or body

98
00:04:54,026 --> 00:04:58,850
mass index modifies the relationship
between PM 2.5 and asthma.

99
00:04:58,850 --> 00:05:03,400
So do children with different BMIs have a,
respond differently in terms

100
00:05:03,400 --> 00:05:06,830
of their asthma symptoms to exposure to PM
2.5.

101
00:05:06,830 --> 00:05:09,260
So that's the kind of basic question that
we want to answer here.

102
00:05:10,260 --> 00:05:13,680
So here's a, a basic plot.
I made this using the qplot function.

103
00:05:13,680 --> 00:05:15,760
You can see the code down there at the
bottom.

104
00:05:15,760 --> 00:05:20,280
And and the basic idea is I plotted the
relationship between, I've taken the

105
00:05:20,280 --> 00:05:22,210
kind of scientific question in the
previous

106
00:05:22,210 --> 00:05:24,440
slide, and translated that into a plot.

107
00:05:24,440 --> 00:05:27,700
So I plotted the relationship between
nocturnal symptoms here.

108
00:05:27,700 --> 00:05:28,532
So these are the

109
00:05:28,532 --> 00:05:32,920
number of days in the past two weeks where
there were symptoms at night.

110
00:05:32,920 --> 00:05:34,722
So, symptoms while sleeping for example.

111
00:05:34,722 --> 00:05:38,326
And so, so the, I plotted the relationship
between nocturnal

112
00:05:38,326 --> 00:05:42,370
symptoms and the in the log of the PM2.5
indoor value.

113
00:05:42,370 --> 00:05:44,430
And you can see that, you know, roughly
speaking,

114
00:05:44,430 --> 00:05:46,430
on the left side we have all the normal

115
00:05:46,430 --> 00:05:48,930
weight children and there doesn't seem to
be a

116
00:05:48,930 --> 00:05:53,770
very strong relationship between log PM2.5
and nocturnal symptoms.

117
00:05:53,770 --> 00:05:57,170
Now the right side we have the overweight
or obese children and

118
00:05:57,170 --> 00:06:01,770
there seems to be an increasing
relationship between PM 2.5 and symptoms.

119
00:06:01,770 --> 00:06:04,280
And so you can see that there's perhaps

120
00:06:04,280 --> 00:06:08,180
some evidence of an interaction between
the BMI

121
00:06:08,180 --> 00:06:11,735
and PM 2.5, because the relationship
between PM

122
00:06:11,735 --> 00:06:16,080
2.5 and symptoms appears to differ by BMI
status.

123
00:06:16,080 --> 00:06:18,910
So, of course, in order to formalize this,
you'd probably want to fit some

124
00:06:18,910 --> 00:06:20,140
sort of model, do a little bit more

125
00:06:20,140 --> 00:06:22,770
thorough analysis, of course, and adjust
for various things.

126
00:06:22,770 --> 00:06:25,930
But we're going to stick, stick here with
this plot for the moment.

127
00:06:25,930 --> 00:06:29,290
So you can make this plot very easily with
the qplot

128
00:06:29,290 --> 00:06:34,680
function and by adding things like facets
and geoms, to the plot.

129
00:06:34,680 --> 00:06:37,060
But I'm going to recreate this plot using
the

130
00:06:37,060 --> 00:06:39,880
kind of more, the, the lower level ggplot
framework.

131
00:06:39,880 --> 00:06:42,700
And so how do we build this up layer by
layer?

132
00:06:42,700 --> 00:06:43,920
First, so first we start with

133
00:06:43,920 --> 00:06:44,540
the data, right?

134
00:06:44,540 --> 00:06:47,870
So here I've got a little excerpt of the
data frame.

135
00:06:47,870 --> 00:06:49,670
And you can see that there are three
variables here.

136
00:06:49,670 --> 00:06:53,300
There's logpm2.5, there's BMI category,
and that's

137
00:06:53,300 --> 00:06:55,732
two levels, there's normal weight and
overweight.

138
00:06:55,732 --> 00:06:58,230
And then I have the number of days with
nocturnal symptoms.

139
00:06:58,230 --> 00:06:59,730
So that's going to be a number between 0

140
00:06:59,730 --> 00:07:02,782
and 14, because it's over the last two
weeks.

141
00:07:02,782 --> 00:07:05,276
And so you can see, so the data are very
important in

142
00:07:05,276 --> 00:07:08,988
any ggplot graphic, because almost
everything that you put on the plot

143
00:07:08,988 --> 00:07:11,150
is a, can be thought of as some sort of
data.

144
00:07:12,320 --> 00:07:15,870
And then in the first, in the next line
here I've got my initial call to ggplot.

145
00:07:15,870 --> 00:07:19,250
You can see I just call ggplot and I give
it the data frame.

146
00:07:19,250 --> 00:07:20,530
I give it a pair of aesthetics.

147
00:07:20,530 --> 00:07:26,720
I give it the x and the y variables, which
are logpm2.5 and NocturnalSympt.

148
00:07:26,720 --> 00:07:30,990
And then, and then I save this to a plot,
to an object that I call g.

149
00:07:30,990 --> 00:07:34,010
And if I call summary on this object, you
can see, I get, it shows you what the

150
00:07:34,010 --> 00:07:37,740
data are, shows you what the the mapping,
the aesthetic mapping is and

151
00:07:37,740 --> 00:07:39,690
it shows you some, something about
faceting,

152
00:07:39,690 --> 00:07:40,790
which, in which case there's no faceting.

153
00:07:40,790 --> 00:07:42,730
So, the, that's null.

154
00:07:42,730 --> 00:07:45,910
So, you can always call summary on a
ggplot object and it'll give you

155
00:07:45,910 --> 00:07:49,310
a quick kind of list of what's in this
plot and what are the data.

156
00:07:52,300 --> 00:07:55,418
Now, the important thing to realize is
that I, I haven't made a plot yet.

157
00:07:55,418 --> 00:07:57,060
There's no pic, if you run this code,

158
00:07:57,060 --> 00:07:59,120
there will be no picture on your screen
yet.

159
00:07:59,120 --> 00:08:01,500
So, for example, if here I, I called
ggplot, and if I, if I say

160
00:08:01,500 --> 00:08:03,490
print g, I immediately get an error,
because

161
00:08:03,490 --> 00:08:05,490
it says there's no layers on this plot.

162
00:08:05,490 --> 00:08:06,220
And so, what does that mean?

163
00:08:06,220 --> 00:08:09,850
It basically just says it doesn't know how
to, how to draw the data yet.

164
00:08:09,850 --> 00:08:12,330
In the sense that it doesn't know if you
want points, it doesn't know if you want

165
00:08:12,330 --> 00:08:14,730
lines or tiles or other kinds of polygons
or

166
00:08:14,730 --> 00:08:17,870
shapes, and so it doesn't have enough
information yet

167
00:08:17,870 --> 00:08:19,360
to draw the plot on the screen.

168
00:08:19,360 --> 00:08:23,050
So the next line here, I add, so notice I
use the plus operator

169
00:08:23,050 --> 00:08:27,050
here, so you can literally add things to
your plot by using the plus operator.

170
00:08:27,050 --> 00:08:32,360
And so when I add the geom_point function,
this

171
00:08:32,360 --> 00:08:35,040
and I save it to a new object called p.

172
00:08:35,040 --> 00:08:37,720
So my new, this p object is also a ggplot

173
00:08:37,720 --> 00:08:40,600
graphic, but it's got this geom_point
thing added to it.

174
00:08:40,600 --> 00:08:42,790
Now when I print that out and print that
out,

175
00:08:42,790 --> 00:08:45,220
I get a plot, I get a picture on the
screen.

176
00:08:45,220 --> 00:08:48,750
So notice that the geom_point function was
called with no arguments.

177
00:08:48,750 --> 00:08:51,090
I didn't have to tell it about the data, I
didn't have to

178
00:08:51,090 --> 00:08:53,540
tell it where the points were, I didn't
have to tell it anything.

179
00:08:53,540 --> 00:08:55,650
So, there are a bunch of defaults that it
will,

180
00:08:55,650 --> 00:08:58,310
that will get used, but the point is that
the original

181
00:08:58,310 --> 00:09:02,670
ggplot object, which is encoded in this g
object, has all

182
00:09:02,670 --> 00:09:06,520
the information that, that, that, that the
geom_point function will need.

183
00:09:06,520 --> 00:09:08,460
And so I don't have to separately

184
00:09:08,460 --> 00:09:09,900
specify it again.

185
00:09:09,900 --> 00:09:13,750
So, I don't, in this first example here I
saved the modified

186
00:09:13,750 --> 00:09:16,640
object to something called p, but you,
you, don't have to do that.

187
00:09:16,640 --> 00:09:19,340
I, I, could have just said g plus geom
point

188
00:09:19,340 --> 00:09:22,100
and then the plot will have auto printed
to the screen.

189
00:09:22,100 --> 00:09:24,490
So you can use auto printing, or if you
want to save the object, you can.

190
00:09:27,390 --> 00:09:30,470
So here's the plot, and I, and with the
point layer added on to it.

191
00:09:30,470 --> 00:09:34,560
So I reproduced the code down here at the
bottom, just for your reference, and

192
00:09:34,560 --> 00:09:39,590
you can see that the default for the
points, are a solid circle, filled circle.

193
00:09:39,590 --> 00:09:42,949
And and so I used the default because I
didn't specify anything different.

194
00:09:44,110 --> 00:09:45,350
So here, here are the data.

